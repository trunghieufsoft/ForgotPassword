@model WM.Register.Models.srv_VNOGateWay_Merchant
@{
    ViewBag.Title = "Register";
    Layout = "~/Views/Shared/_LayoutLogin.cshtml";
}
<script type="text/javascript" src="https://code.jquery.com/jquery-latest.pack.js"></script>
<h2>Register Merchant</h2>
@using (Ajax.BeginForm("Register", "Register", new AjaxOptions { HttpMethod = "POST", OnSuccess = "onAjaxRequestSuccess" }, new { @id = "AjaxformId", @class = "form-horizontal", role = "form", enctype = "multipart/form-data" }))
{

    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <div class="col-lg-12">
            <div class="col-lg-6">
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                <div class="form-group">
                    @Html.LabelFor(model => model.merchant_name)
                    @Html.TextBoxFor(model => model.merchant_name, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.merchant_name, "", new { @class = "text-danger" })
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.merchant_code)
                    @Html.TextBoxFor(model => model.merchant_code, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.merchant_code, "", new { @class = "text-danger" })
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.password)
                    @Html.PasswordFor(model => model.password, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.password, "", new { @class = "text-danger" })
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.merchant_website)
                    @Html.TextBoxFor(model => model.merchant_website, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.merchant_website, "", new { @class = "text-danger" })
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.merchant_email)
                    @Html.TextBoxFor(model => model.merchant_email, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.merchant_email, "", new { @class = "text-danger" })
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.merchant_report_email)
                    @Html.TextBoxFor(model => model.merchant_report_email, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.merchant_report_email, "", new { @class = "text-danger" })
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.merchant_phone)
                    @Html.TextBoxFor(model => model.merchant_phone, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.merchant_phone, "", new { @class = "text-danger" })
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.merchant_wmid)
                    @Html.TextBoxFor(model => model.merchant_wmid, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.merchant_wmid, "", new { @class = "text-danger" })
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.merchant_purse)
                    @Html.TextBoxFor(model => model.merchant_purse, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.merchant_purse, "", new { @class = "text-danger" })
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.merchant_result_url)
                    @Html.TextBoxFor(model => model.merchant_result_url, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.merchant_result_url, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
        <div class="col-lg-12">
            <div class="col-lg-6">
                <div class="form-group">
                    @Html.LabelFor(model => model.merchant_cancel_url)
                    @Html.TextBoxFor(model => model.merchant_cancel_url, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.merchant_cancel_url, "", new { @class = "text-danger" })
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.merchant_error_url)
                    @Html.TextBoxFor(model => model.merchant_error_url, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.merchant_error_url, "", new { @class = "text-danger" })
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.merchant_secret_key)
                    @Html.TextBoxFor(model => model.merchant_secret_key, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.merchant_secret_key, "", new { @class = "text-danger" })
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.merchant_key_hash)
                    @Html.TextBoxFor(model => model.merchant_key_hash, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.merchant_key_hash, "", new { @class = "text-danger" })
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.merchant_address)
                    @Html.TextBoxFor(model => model.merchant_address, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.merchant_address, "", new { @class = "text-danger" })
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.merchant_token)
                    @Html.TextBoxFor(model => model.merchant_token, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.merchant_token, "", new { @class = "text-danger" })
                </div>
                @*<div class="form-group">
                        @Html.LabelFor(model => model.merchant_type, htmlAttributes: new { @class = "control-label col-md-5" })
                        @Html.TextBoxFor(model => model.merchant_type, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.merchant_type, "", new { @class = "text-danger" })
                    </div>*@
                @*<div class="form-group">
                        @Html.LabelFor(model => model.merchant_mode, htmlAttributes: new { @class = "control-label col-md-5" })
                        @Html.TextBoxFor(model => model.merchant_mode, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.merchant_mode, "", new { @class = "text-danger" })
                    </div>*@
                @*<div class="form-group">
                        @Html.LabelFor(model => model.merchant_status, htmlAttributes: new { @class = "control-label col-md-5" })
                        @Html.TextBoxFor(model => model.merchant_status, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.merchant_status, "", new { @class = "text-danger" })
                    </div>*@
                @*<div class="form-group">
                        @Html.LabelFor(model => model.created_date, htmlAttributes: new { @class = "control-label col-md-5" })
                        @Html.TextBoxFor(model => model.created_date, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.created_date, "", new { @class = "text-danger" })
                    </div>*@
                @*<div class="form-group">
                        @Html.LabelFor(model => model.created_by, htmlAttributes: new { @class = "control-label col-md-5" })
                        @Html.TextBoxFor(model => model.created_by, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.created_by, "", new { @class = "text-danger" })
                    </div>*@
                @*<div class="form-group">
                        @Html.LabelFor(model => model.updated_date, htmlAttributes: new { @class = "control-label col-md-5" })
                        @Html.TextBoxFor(model => model.updated_date, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.updated_date, "", new { @class = "text-danger" })
                    </div>*@
                @*<div class="form-group">
                        @Html.LabelFor(model => model.updated_by, htmlAttributes: new { @class = "control-label col-md-5" })
                        @Html.TextBoxFor(model => model.updated_by, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.updated_by, "", new { @class = "text-danger" })
                    </div>*@
                <div class="form-group">
                    @Html.LabelFor(model => model.ip_addresses)
                    @Html.TextBoxFor(model => model.ip_addresses, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.ip_addresses, "", new { @class = "text-danger" })
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.accept_hosts)
                    @Html.TextBoxFor(model => model.accept_hosts, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.accept_hosts, "", new { @class = "text-danger" })
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.logo)
                    <input type="file" name="file" />
                    @*@Html.TextBoxFor(model => model.logo, new { htmlAttributes = new { @class = "form-control" } })*@
                    @*@Html.ValidationMessageFor(model => model.logo, "", new { @class = "text-danger" })*@
                </div>            
                @*<div class="form-group">
                        @Html.LabelFor(model => model.parent_id, htmlAttributes: new { @class = "control-label col-md-5" })
                        @Html.TextBoxFor(model => model.parent_id, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.parent_id, "", new { @class = "text-danger" })
                    </div>*@
                <div class="form-group">
                    @Html.LabelFor(model => model.merchant_secret_key_x20)
                    @Html.TextBoxFor(model => model.merchant_secret_key_x20, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.merchant_secret_key_x20, "", new { @class = "text-danger" })
                </div>
                @*<div class="form-group">
                        @Html.LabelFor(model => model.set_fee, htmlAttributes: new { @class = "control-label col-md-5" })
                        <div class="checkbox">
                            @Html.TextBoxFor(model => model.set_fee)
                            @Html.ValidationMessageFor(model => model.set_fee, "", new { @class = "text-danger" })
                        </div>
                    </div>*@
                @*<div class="form-group">
                        @Html.LabelFor(model => model.merchant_account)
                        @Html.TextBoxFor(model => model.merchant_account, new {@class="form-control" })
                        @Html.ValidationMessageFor(model => model.merchant_account, "", new { @class = "text-danger" })
                    </div>*@
            </div>
        </div>
    </div>
    <div class="form-group">
        <div class="col-sm-12" style="margin-left:-15px">
            @*<input type="submit" value="Register" class="btn btn-default" style="background-color:red" />*@
            @*<input type="button" name="btnRegister" id="btnRegister" class="btn-success" value="Đăng ký" />*@
            <button type="submit"
                    class="btn btn-warning"
                    value="Register">
                <span class="ladda-label">Register</span>
            </button>
        </div>
    </div>
}
@section Scripts {

    @Scripts.Render("~/bundles/jqueryval")
}
<script language="javascript">
    $(document).ready(function () {
        $("#AjaxformId").submit(function (event) {
            var dataString;
            event.preventDefault();
            event.stopImmediatePropagation();
            var action = $("#AjaxformId").attr("action");
            // Setting.
            dataString = new FormData($("#AjaxformId").get(0));
            contentType = false;
            processData = false;
            $.ajax({
                type: "POST",
                url: action,
                data: dataString,
                dataType: "json",
                contentType: contentType,
                processData: processData,
                success: function (result) {
                    // Result.
                    //alert("success!");
                    //onAjaxRequestSuccess(result);
                    //window.location.href = "localhost:Register/Index";
                    alert("Register Success!");
                    var newURL = window.location.protocol + "//" + window.location.host + "/" + "Register/Index";
                    window.location.href = newURL;
                },
                error: function (jqXHR, textStatus, errorThrown) {
                    //do your own thing
                    alert("Register Fail!");
                }
            });
        }); //end .submit()
    });
    //var onAjaxRequestSuccess = function (result) {
    //    if (result.EnableError) {
    //        // Setting.
    //        alert(result.ErrorMsg);
    //    } else if (result.EnableSuccess) {
    //        // Setting.
    //        alert(result.SuccessMsg);
    //        // Resetting form.
    //        $('#AjaxformId').get(0).reset();
    //    }
    //}

</script>

